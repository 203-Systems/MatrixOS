# MatrixOS Python Interface - HID
# Binding of OS/MatrixOS.h (HID related functions)

from _MatrixOS_HIDEnums import KeyboardKeycode, GamepadDPadDirection

def Ready(self) -> bool: ...

class Keyboard:
    def Write(self, keycode: KeyboardKeycode) -> bool: ...
    def Press(self, keycode: KeyboardKeycode) -> bool: ...
    def Release(self, keycode: KeyboardKeycode) -> bool: ...
    def ReleaseAll(self) -> None: ...

# class Mouse:
#     def Click(self, keycode: MouseKeycode) -> None: ...
#     def Press(self, keycode: MouseKeycode) -> None: ...
#     def Release(self, keycode: MouseKeycode) -> None: ...
#     def ReleaseAll(self) -> None: ...
#     def Move(self, x: int, y: int, wheel: int) -> None: ...

# class Touch:
#     def Click(self, keycode: MouseKeycode) -> None: ...
#     def Press(self, keycode: MouseKeycode) -> None: ...
#     def Release(self, keycode: MouseKeycode) -> None: ...
#     def ReleaseAll(self) -> None: ...
#     def MoveTo(self, x: int, y: int, wheel: int) -> None: ...
#     def Move(self, x: int, y: int, wheel: int) -> None: ...

class Gamepad:
    def Press(self, button_id: int) -> None: ...
    def Release(self, button_id: int) -> None: ...
    def ReleaseAll(self) -> None: ...
    def Button(self, button_id: int, state: bool) -> None: ...
    def Buttons(self, button_mask: int) -> None: ...
    def XAxis(self, value: int) -> None: ...
    def YAxis(self, value: int) -> None: ...
    def ZAxis(self, value: int) -> None: ...
    def RXAxis(self, value: int) -> None: ...
    def RYAxis(self, value: int) -> None: ...
    def RZAxis(self, value: int) -> None: ...
    def DPad(self, direction: GamepadDPadDirection) -> None: ...

# class Consumer:
#     def Write(self, keycode: ConsumerKeycode) -> None: ...
#     def Press(self, keycode: ConsumerKeycode) -> None: ...
#     def Release(self, keycode: ConsumerKeycode) -> None: ...
#     def ReleaseAll(self) -> None: ...

# class System:
#     def Write(self, keycode: SystemKeycode) -> None: ...
#     def Press(self, keycode: SystemKeycode) -> None: ...
#     def Release(self) -> None: ...
#     def ReleaseAll(self) -> None: ...

class RawHID:
    def Get(self, timeout_ms: int) -> bytes: ...
    def Send(self, report: bytes) -> bool: ...