# MatrixOS Python Interface - File System (Vanilla Python API)
# Pythonic file system operations with automatic sandboxing

from PikaObj import *
from MatrixOS_FileMode import FileMode, SeekMode

# Vanilla Python-style file operations
def open(file: str, mode: str = "r", buffering: int = -1, encoding: str = None):
    pass

def listdir(path: str = "."):
    pass

def mkdir(path: str, mode: int = 0o777):
    pass

def makedirs(path: str, mode: int = 0o777, exist_ok: bool = False):
    pass

def remove(path: str):
    pass

def rmdir(path: str):
    pass

def rename(src: str, dst: str):
    pass

def getcwd() -> str:
    pass

def chdir(path: str):
    pass

# Path operations
class path(TinyObj):
    @staticmethod
    def exists(path: str) -> bool:
        pass

    @staticmethod
    def isfile(path: str) -> bool:
        pass

    @staticmethod
    def isdir(path: str) -> bool:
        pass

    @staticmethod
    def getsize(path: str) -> int:
        pass

    @staticmethod
    def join(*paths: str) -> str:
        pass

    @staticmethod
    def dirname(path: str) -> str:
        pass

    @staticmethod
    def basename(path: str) -> str:
        pass

    @staticmethod
    def splitext(path: str):
        pass

# File object class (similar to Python's built-in file object)
class FileObject(TinyObj):
    def __init__(self, path: str, mode: str):
        pass

    def __del__(self):
        pass

    def __enter__(self):
        pass

    def __exit__(self, exc_type, exc_val, exc_tb):
        pass

    def read(self, size: int = -1):
        pass

    def readline(self, size: int = -1):
        pass

    def readlines(self, hint: int = -1):
        pass

    def write(self, data):
        pass

    def writelines(self, lines):
        pass

    def seek(self, offset: int, whence: int = 0):
        pass

    def tell(self):
        pass

    def flush(self):
        pass

    def close(self):
        pass

    def closed(self):
        pass

    def readable(self):
        pass

    def writable(self):
        pass

    def seekable(self):
        pass

