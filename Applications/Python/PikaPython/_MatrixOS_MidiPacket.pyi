# MidiPacket definitions for MatrixOS
# Binding of OS/Framework/Midi/MidiPacket.h

from MatrixOS_MidiPortID import MidiPortID
from MatrixOS_MidiStatus import MidiStatus

class MidiPacket:
    def __init__(self, *val) -> None: ...

    # Static factory methods for different MIDI messages
    def NoteOn(channel: int, note: int, velocity: int) -> MidiPacket: ...
    def NoteOff(channel: int, note: int, velocity: int) -> MidiPacket: ...
    def AfterTouch(channel: int, note: int, pressure: int) -> MidiPacket: ...
    def ControlChange(channel: int, controller: int, value: int) -> MidiPacket: ...
    def ProgramChange(channel: int, program: int) -> MidiPacket: ...
    def ChannelPressure(channel: int, pressure: int) -> MidiPacket: ...
    def PitchBend(channel: int, value: int) -> MidiPacket: ...
    def Clock() -> MidiPacket: ...
    def Start() -> MidiPacket: ...
    def Continue() -> MidiPacket: ...
    def Stop() -> MidiPacket: ...
    def ActiveSense() -> MidiPacket: ...
    def Reset() -> MidiPacket: ...
    def SongPosition(position: int) -> MidiPacket: ...
    def SongSelect(song: int) -> MidiPacket: ...
    def TuneRequest() -> MidiPacket: ...
    
    # Getters
    def Port(self) -> MidiPortID: ...
    def Status(self) -> MidiStatus: ...
    def Channel(self) -> int: ...
    def Note(self) -> int: ...
    def Controller(self) -> int: ...
    def Velocity(self) -> int: ...
    def Value(self) -> int: ...

    # Setters
    def SetStatus(self, status: MidiStatus) -> bool: ...
    def SetChannel(self, channel: int) -> bool: ...
    def SetNote(self, note: int) -> bool: ...
    def SetController(self, controller: int) -> bool: ...
    def SetVelocity(self, velocity: int) -> bool: ...
    def SetValue(self, value: int) -> bool: ...

    # Helper
    def Length(self) -> int: ...
    def SysEx(self) -> bool: ...
    def SysExStart(self) -> bool: ...
