# MatrixOS Python Interface
# Binding of OS/MatrixOS.h

from _MatrixOS_KeyEvent import KeyInfo, KeyEvent, KeyState
from _MatrixOS_Direction import Direction

from MatrixOS_Color import Color
from MatrixOS_Point import Point

import _MatrixOS_HID as HID
import _MatrixOS_USB as USB

# System functions
class SYS:
    def Reboot() -> None: ...
    def Bootloader() -> None: ...
    def DelayMs(ms: int) -> None: ...
    def Millis() -> int: ...
    def OpenSetting() -> None: ...
    def ExecuteAPP(author: str, app_name: str) -> None: ...
    def ExecuteAPPByID(app_id: int) -> None: ...

class LED:
    def NextBrightness(self) -> None: ...
    def SetBrightness(self, brightness: int) -> None: ...
    def SetBrightnessMultiplier(self, partition_name: str, multiplier: float) -> None: ...
    def SetColor(self, xy: Point, color: Color, layer:int) -> None: ...
    def SetColorByID(self, id: int, color: Color, layer:int) -> None: ...
    def Fill(self, color: Color, layer:int) -> None: ...
    def FillPartition(self, partition: str, color: Color, layer:int) -> None: ...
    def Update(self, layer:int) -> None: ...
    def CurrentLayer(self) -> int: ...
    def CreateLayer(self, crossfade:int) -> int: ...
    def CopyLayer(self, dest: int, src: int) -> None: ...
    def DestroyLayer(self, crossfade:int) -> bool: ...
    def Fade(self, crossfade:int) -> None: ...
    def PauseUpdate(self, pause: bool) -> None: ...
    def GetLedCount(self) -> int: ...

class KeyPad:
    def Get(self, timeout_ms: int) -> KeyEvent: ...
    def GetKey(self, keyXY: Point) -> KeyInfo: ...
    def GetKeyByID(self, keyID: int) -> KeyInfo: ...
    def Clear(self) -> None: ...
    def XY2ID(self, xy: Point) -> int: ...
    def ID2XY(self, keyID: int) -> Point: ...

# class MIDI:
#     def Get(self, timeout_ms: int) -> MidiPacket: ...
#     def Send(self, packet: MidiPacket, timeout_ms: int) -> bool: ...
#     def SendSysEx(self, port: int, length: int, data: bytes, include_meta: bool) -> bool: ...

class NVS:
    def GetSize(self, hash: int) -> int: ...
    def GetVariable(self, hash: int, length:int) -> bytes: ...
    def SetVariable(self, hash: int, data: bytes, length:int) -> bool: ...
    def DeleteVariable(self, hash: int) -> bool: ...

__all__ = [
    "SYS",
    "LED",
    "KeyPad",
    "USB",
    "HID",
    "NVS"
]