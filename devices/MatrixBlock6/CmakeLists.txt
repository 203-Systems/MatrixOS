cmake_minimum_required(VERSION 3.16)

set(IDF_TARGET "esp32s3")

if(NOT DEFINED ENV{IDF_PATH})
  message(FATAL_ERROR " Please set up ESP-IDF environment before building.")
endif()

message(STATUS "IDF_PATH: $ENV{IDF_PATH}")

# set(PROJECT_NAME "MatrixOS-${DEVICE}")
# set(BUILD_DIR ${CMAKE_BINARY_DIR}/Build/${DEVICE})

set(SDKCONFIG_PATH ${CMAKE_BINARY_DIR}/sdkconfig)
if(MODE STREQUAL "DEVELOPMENT")
    set(SDKCONFIG_DEFAULTS_PATH "${FAMILY_PATH}/sdkconfig.development")
else()
    set(SDKCONFIG_DEFAULTS_PATH "${FAMILY_PATH}/sdkconfig.release")
endif()

include($ENV{IDF_PATH}/tools/cmake/idf.cmake)

set(EXTRA_COMPONENT_DIRS ${FAMILY_PATH})

idf_build_process("${IDF_TARGET}"
    COMPONENTS esptool_py freertos efuse esp_common esp_system esp_driver_gpio esp_driver_uart nvs_flash esp_wifi esp_netif esp_adc ulp
    SDKCONFIG ${SDKCONFIG_PATH}
    SDKCONFIG_DEFAULTS ${SDKCONFIG_DEFAULTS_PATH}
)

set(DCMAKE_TOOLCHAIN_FILE ${DCMAKE_TOOLCHAIN_FILE}) # Suppress variable not used warning

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# idf_build_set_property(COMPILE_OPTIONS "-Wno-maybe-uninitialized" APPEND)
# idf_build_set_property(COMPILE_OPTIONS "-fdiagnostics-color=always" APPEND)

idf_component_get_property(FREERTOS_INC freertos ORIG_INCLUDE_PATH)

add_library(FreeRTOS INTERFACE)
target_link_libraries(FreeRTOS INTERFACE idf::freertos)
target_include_directories(FreeRTOS INTERFACE
    ${FREERTOS_INC}
    ${FREERTOS_INC}/config/include/freertos
)

# Collect all device source files
file(GLOB_RECURSE DEVICE_SOURCES 
    "${CMAKE_CURRENT_SOURCE_DIR}/Family.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/Drivers/*.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/Variants/Mystrix/Device.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/ULP/*.c"
)

file(GLOB_RECURSE DEVICE_HEADERS
    "${CMAKE_CURRENT_SOURCE_DIR}/*.h"
    "${CMAKE_CURRENT_SOURCE_DIR}/Drivers/*.h"
    "${CMAKE_CURRENT_SOURCE_DIR}/Variants/Mystrix/*.h"
)

add_library(MatrixOSDevice
    ${DEVICE_SOURCES}
    ${DEVICE_HEADERS}
)

target_include_directories(MatrixOSDevice PUBLIC 
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/Variants/Mystrix
    ${CMAKE_SOURCE_DIR}/core/ESP32SX
)

target_link_libraries(MatrixOSDevice PUBLIC 
    DeviceInterface
    MatrixOSFramework
    idf::freertos 
    idf::esp_common
    idf::esp_system
    idf::efuse
    idf::esp_driver_gpio
    idf::esp_driver_uart
    idf::nvs_flash
    idf::esp_wifi
    idf::esp_netif
    idf::esp_adc
    idf::ulp
)



# string(TOUPPER "${IDF_TARGET}" TINYUSB_MCU_OPT)



# add_library(MystrixBlock6Family
#     ${DEVICE_FAMILY_HEADERS}
#     ${DEVICE_FAMILY_SOURCES}
# )

# target_link_libraries(MystrixBlock6Family PUBLIC DeviceInterface MatrixOSInterface)

# add_executable(${CMAKE_PROJECT_NAME} main.cpp)
# 
# idf_build_executable(${CMAKE_PROJECT_NAME})

# file(GLOB_RECURSE DEVICE_FAMILY_HEADERS "*.h")
# file(GLOB_RECURSE DEVICE_FAMILY_SOURCES "*.cpp" "*.c")

set(elf_file ${CMAKE_PROJECT_NAME}.elf)
add_library(${elf_file} Family.cpp)
target_link_libraries(${elf_file} 
    MatrixOS
)
idf_build_executable(${elf_file})